<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap>
	<resultMap id="result" class="com.pointunion.domain.dto.PileRecord">
		<result property="pileSeq" column="pile_seq"/>
		<result property="maNo" column="ma_no"/>
		<result property="cardNo" column="card_no"/>
		<result property="point" column="point"/>
		<result property="pileType" column="pile_type"/>
		<result property="pileDesc" column="pile_desc"/>
		<result property="pendingTime" column="pending_time"/>
		<result property="pileTime" column="pile_time"/>
		
		<result property="merchantName" column="merchant_name"/>
		<result property="merchantNo" column="merchant_no"/>
		<result property="cardName" column="card_name"/>
		<result property="totalCountForCounter" column="total_count_for_counter"/>
	</resultMap>

	<select id="getPileRecordByPK" resultMap="result">
		select
			0 total_count_for_counter,
			p.pile_seq,
			p.ma_no,
			p.card_no,
			p.point,
			p.pile_type,
			p.pile_desc,
			p.pending_time,
			p.pile_time,
			m.merchant_name,
			m.merchant_no,
			mc.card_name
		from pile_record p, merchant_account ma, merchant m, card c, meta_card mc
		where pile_seq = #value#
		and p.ma_no = ma.ma_no 
			and ma.merchant_no = m.merchant_no
			and p.card_no = c.card_no
			and c.card_category = mc.card_category 
	</select>

	<insert id="insertPileRecord" parameterClass="com.pointunion.domain.dto.PileRecord">
		insert into pile_record(ma_no,card_no,point,pile_type,pile_desc,pending_time,pile_time)
		values(#maNo#,#cardNo#,#point#,#pileType#,#pileDesc#,#pendingTime#,#pileTime#)
	</insert>

	<update id="updatePileRecord" parameterClass="com.pointunion.domain.dto.PileRecord">
		update pile_record set
			ma_no = #maNo#,
			card_no = #cardNo#,
			point = #point#,
			pile_type = #pileType#,
			pile_desc = #pileDesc#,
			pending_time = #pendingTime#,
			pile_time = #pileTime#
		where pile_seq = #pileSeq#
	</update>

	<delete id="deletePileRecord">
		delete pile_record where pile_seq = #value#
	</delete>

	<select id="getPileRecordsByQC" parameterClass="com.pointunion.domain.qc.PileRecordQC"  resultMap="result">
		select
		<dynamic>
			<isNotNull property="countFlag">
				count(*) total_count_for_counter,
				null pile_seq,
				null ma_no,
				null card_no,
				null point,
				null pile_type,
				null pile_desc,				
				null pending_time,
				null pile_time,
				null merchant_name,
				null merchant_no,
				null card_name
			</isNotNull>
			<isNull property="countFlag">
				0 total_count_for_counter,
				p.pile_seq,
				p.ma_no,
				p.card_no,
				p.point,
				p.pile_type,
				p.pile_desc,
				p.pending_time,
				p.pile_time,
				m.merchant_name,
				m.merchant_no,
				mc.card_name				
			</isNull>
		</dynamic>
		from pile_record p, merchant_account ma, merchant m, card c, meta_card mc
		where p.ma_no = ma.ma_no 
			and ma.merchant_no = m.merchant_no
			and p.card_no = c.card_no
			and c.card_category = mc.card_category 
		<dynamic>
			<isNotEmpty prepend="and" property="accountNo">
				c.account_no = #accountNo#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="cardNo">
				p.card_no = #cardNo#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="maNo">
				p.ma_no = #maNo#
			</isNotEmpty>				
			<isNotEmpty prepend="and" property="merchantNo">
				m.merchant_no = #merchantNo#
			</isNotEmpty>
			<isNotNull prepend="and" property="point1">
				<![CDATA[ p.point >= #point1# ]]>
			</isNotNull>				
			<isNotNull prepend="and" property="point2">
				<![CDATA[ p.point <= #point2# ]]>
			</isNotNull>								
			<isNotEmpty prepend="and" property="pileType">	
				p.pile_type = #pileType#
			</isNotEmpty>
							
			<isEqual property="pileType" compareValue="I">								
				<isNotNull prepend="and" property="time1">
					<![CDATA[ p.pile_time >= #time1# ]]>
				</isNotNull>				
				<isNotNull prepend="and" property="time2">
					<![CDATA[ p.pile_time <= #time2# ]]>
				</isNotNull>
			</isEqual>

			<isEqual property="pileType" compareValue="E">
				<isNotNull prepend="and" property="time1">
					<![CDATA[ p.pending_time >= #time1# ]]>
				</isNotNull>				
				<isNotNull prepend="and" property="time2">
					<![CDATA[ p.pending_time <= #time2# ]]>
				</isNotNull>
			</isEqual>
			
			<isEmpty property="pileType">
				<isNotNull property="time1">
					<isNotNull prepend="and" property="time2">
						<![CDATA[
							( (p.pending_time <= #time2# and p.pending_time >= #time1#)
								or (p.pile_time <= #time2# and p.pile_time >= #time1#)
							)
						 ]]>
					</isNotNull>
					<isNull prepend="and" property="time2">
						<![CDATA[
							( p.pending_time >= #time1# or p.pile_time >= #time1# )
						 ]]>
					</isNull>													
				</isNotNull>
				<isNull property="time1">
					<isNotNull prepend="and" property="time2">
						<![CDATA[
							( p.pending_time <= #time2# or p.pile_time <= #time2# )							
						 ]]>
					</isNotNull>										
				</isNull>											
			</isEmpty>									
		</dynamic>
		<dynamic>
			<isNull property="countFlag">
				order by
				<!--  排序字段,  1-cardNo, 2-merchantNo, 3-pileType, 4-积点, 5-时间   -->
				<isEqual property="orderBy" compareValue="1">
					p.card_no,
				</isEqual>
				<isEqual property="orderBy" compareValue="2">
					m.merchant_no,
				</isEqual>
				<isEqual property="orderBy" compareValue="3">
					p.pile_type,
				</isEqual>
				<isEqual property="orderBy" compareValue="4">
					p.point,
				</isEqual>							
				<isEqual property="orderBy" compareValue="5">
					<isEqual property="pileType" compareValue="E">
						p.pending_time,
					</isEqual>
					<isEqual property="pileType" compareValue="I">
						p.pile_time,
					</isEqual>					
				</isEqual>	
				p.card_no,m.merchant_no,p.pile_type,p.pending_time,p.pile_time 
				limit
				<isNotNull property="startRow">
					#startRow#,
				</isNotNull>
				<isNull property="startRow">
					0,
				</isNull>
				<isNotNull property="pageSize">
					#pageSize#
				</isNotNull>				
				<isNull property="pageSize">
					20
				</isNull>
			</isNull>
		</dynamic>			
	</select>
</sqlMap>
